<!DOCTYPE html>
<html>
<head>
	<meta charset="UTF-8">
	<meta content="IE=edge,chrome=1" http-equiv="X-UA-Compatible" />
	<meta content="width=device-width, initial-scale=1.0" name="viewport" />

	<meta http-equiv="cache-control" content="max-age=0" />
	<meta http-equiv="cache-control" content="no-cache" />
	<meta http-equiv="expires" content="0" />
	<meta http-equiv="expires" content="Tue, 01 Jan 1980 1:00:00 GMT" />
	<meta http-equiv="pragma" content="no-cache" />

	<!-- script src="https://code.jquery.com/jquery-3.4.1.slim.min.js" integrity="sha256-pasqAKBDmFT4eHoN2ndd6lN370kFiGUFyTiUHWhU7k8=" crossorigin="anonymous"></script -->
	<script src="https://code.jquery.com/jquery-2.2.4.min.js" integrity="sha256-BbhdlvQf/xTY9gja0Dq3HiwQF8LaCRTXxZKRutelT44=" crossorigin="anonymous"></script>
	
	<!-- Autodesk Forge Viewer -->
	<link href="https://developer.api.autodesk.com/modelderivative/v2/viewers/style.min.css?v=<%= version %>" rel="stylesheet" />
	<!-- script src="https://developer.api.autodesk.com/modelderivative/v2/viewers/three.min.js?v=<%= version %>"></script -->
	<script src="https://developer.api.autodesk.com/modelderivative/v2/viewers/viewer3D.js?v=<%= version %>"></script>

	<style>
	.left { float: left; }
	.right { float: right; }
	.clear { clear: both; }

	body { margin: 0 auto; padding: 0px; }

	div#project { margin: 0 auto; text-align: left; position:absolute; width:100%; height:99%; }
	div#viewer { width: 75%; height: 100%; cursor: pointer; padding: 0px; position: relative; overflow: hidden;
		background-color: #eee; border: 2px dashed #aaa; border-radius: 10px; }
	div#list { width: calc(24% - 8px); height: 100%; padding: 0px; position:relative;
		background-color: #eee; border: 2px dashed #aaa; border-radius: 10px; }

	div#list div button {
		background:-webkit-gradient(linear, left top, left bottom, color-stop(0.05, #44c767), color-stop(1, #5cbf2a));
		background:-moz-linear-gradient(top, #44c767 5%, #5cbf2a 100%);
		background:-webkit-linear-gradient(top, #44c767 5%, #5cbf2a 100%);
		background:-o-linear-gradient(top, #44c767 5%, #5cbf2a 100%);
		background:-ms-linear-gradient(top, #44c767 5%, #5cbf2a 100%);
		background:linear-gradient(to bottom, #44c767 5%, #5cbf2a 100%);
		filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#44c767', endColorstr='#5cbf2a',GradientType=0);
		background-color:#44c767;
		-moz-border-radius:12px;
		-webkit-border-radius:12px;
		border-radius:12px;
		border:1px solid #18ab29;
		display:inline-block;
		cursor:pointer;
		color:#ffffff;
		font-family:Verdana;
		font-size:12px;

		text-decoration:none;
		text-shadow:0px 1px 0px #2f6627;
		margin: 2px;
		height: 42px;
		width: 170px;
	}
	div#list div button:hover {
		background:-webkit-gradient(linear, left top, left bottom, color-stop(0.05, #5cbf2a), color-stop(1, #44c767));
		background:-moz-linear-gradient(top, #5cbf2a 5%, #44c767 100%);
		background:-webkit-linear-gradient(top, #5cbf2a 5%, #44c767 100%);
		background:-o-linear-gradient(top, #5cbf2a 5%, #44c767 100%);
		background:-ms-linear-gradient(top, #5cbf2a 5%, #44c767 100%);
		background:linear-gradient(to bottom, #5cbf2a 5%, #44c767 100%);
		filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#5cbf2a', endColorstr='#44c767',GradientType=0);
		background-color:#5cbf2a;
	}
	div#list div button:active { position:relative; top:1px; }
	</style>
</head>
<body onload="initialize()">

	<div id="project">
		
			<div id="viewer" class="left"></div>
			<div id="list" class="right"></div>
		
		<br>
	</div>

	<script>
		let urn ='<%= urn %>' ;
		function getAccessToken (onGetAccessToken) {
			onGetAccessToken ('<%= access_token %>', 82000) ;
		}

		let oDocument =null, oViewer =null ;
		let oViews3D =null, oViews2D =null ;

		function initialize () {
			let svf_options ={
				env: 'AutodeskProduction',
				getAccessToken: getAccessToken,
				//accessToken: ''
			} ;
			let otg_options ={
    			env: 'FluentProduction',
    			api: 'fluent',
    			useCookie: false,  //optional for Chrome browser
    			useCredentials: true,
    			//getAccessToken: getAccessToken,
				accessToken: '<%= access_token %>'
			} ;
			let options =otg_options ;
			Autodesk.Viewing.Initializer (options, loadModel) ;
		}

		function loadModel () {
			let pattern =/^(urn|https?):.*$/g ;
			if ( !pattern.test (urn) )
				urn ='urn:' + urn ;
			pattern =/^(urn):.*$/g ;
			if ( pattern.test (urn) )
				Autodesk.Viewing.Document.load (urn, onDocumentLoaded, onError) ;
			else
				startViewer (urn, urn.replace (/[^\/]*$/, '')) ;
		}

		function onDocumentLoaded (doc) {
			oDocument =doc ;
			// Get all the 3D and 2D views (but keep in separate arrays so we can differentiate in the UI)
			oViews3D = doc.getRoot().search({
				'type': 'geometry',
				'role': '3d'
			});
			oViews2D = doc.getRoot().search({
				'type': 'geometry',
				'role': '2d'
			});
			// Load up first a 3D view by default
			let viewable =null ;
			if ( oViews3D && oViews3D.length > 0 )
				viewable =oViews3D [0] ;
			else if ( oViews2D && oViews2D.length > 0 )
				viewable =oViews2D [0] ;
			else
				return (alert ('ERROR: No 3D or 2D views found in this document!')) ;

			for (let i = 0; oViews3D && i < oViews3D.length; i++) {
				let r = $('<div><button id="view_' + i + '" data="' + oViews3D[i].data.guid + '">' + oViews3D[i].data.name +
					'</button></div>');
				$('#list').append(r);
				$('#view_' + i).click(function (e) {
					switchView(e, '3d');
				});
			}
			for (let i = 0, j = 1000; oViews2D && i < oViews2D.length; j++, i++) {
				let r = $('<div><button id="view_' + j + '" data="' + oViews2D[i].data.guid + '">' + oViews2D[i].data.name +
					'</button></div>');
				$('#list').append(r);
				$('#view_' + j).click(function (e) {
					switchView(e, '2d');
				});
			}

			startViewer (doc.getViewablePath (viewable), viewable.findPropertyDbPath ()) ;
		}

		function startViewer (svfUrl, sharedPropertyDbPath) {
			if ( oViewer )
				return (loadModelInViewer (svfUrl, sharedPropertyDbPath)) ;

			let modelOptions ={ sharedPropertyDbPath: sharedPropertyDbPath } ;
			let viewerElement =document.getElementById ('viewer') ;
			oViewer =new Autodesk.Viewing.Private.GuiViewer3D (viewerElement) ;
			//let pattern =/^(urn):.*$/g ;
			//if ( pattern.test (urn) ) {
			oViewer.start (svfUrl, modelOptions, onModelLoaded, onError) ;
			//} else {
			//    oViewer.initialize () ;
			//    oViewer.loadModel (svfUrl, modelOptions, onModelLoaded, onError) ;
			//}
			//oViewer.addEventListener (Autodesk.Viewing.TOOLBAR_CREATED_EVENT, onViewerToolbarCreated) ;
			//oViewer.addEventListener (Autodesk.Viewing.GEOMETRY_LOADED_EVENT, onViewerGeometryLoaded) ;
		}

		function loadModelInViewer (svfUrl, sharedPropertyDbPath) {
			oViewer.tearDown () ;
			oViewer.setUp (oViewer.config) ;
			let modelOptions ={ sharedPropertyDbPath: sharedPropertyDbPath } ;
			oViewer.loadModel (svfUrl, modelOptions, onModelLoaded, onError) ;
		}

		function onModelLoaded (model) {
		}

		function onError (viewerErrorCode) {
			alert ('Loading Error #' + viewerErrorCode) ;
		}

		function switchView(evt, role) {
			evt.stopPropagation();
			let index = role === '3d' ? 0 : 1000;
			let views = role === '3d' ? oViews3D : oViews2D;
			let i = parseInt(evt.target.id.substring(5)) - index;
			let guid = views[i].data.guid;
			let viewObj = oDocument.getRoot().search({
				'type': 'geometry',
				'role': role,
				'guid': guid
			}, true);
			if (viewObj.length == 0)
				return;
			let svfUrl = oDocument.getViewablePath(viewObj[0]);
			loadModelInViewer(svfUrl, viewObj[0].findPropertyDbPath());
		}

	</script>
</body>
</html>
